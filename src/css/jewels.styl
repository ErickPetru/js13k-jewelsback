$color-square = #f3372a
$color-diamond = #f5d10c
$color-circle = #dfdcd5
$color-triangle = #d335ef
$color-hexagon = #44d82c
$color-heptagon = #2a5bf3

jewel-piece
  position: relative
  z-index: 1
  box-sizing: border-box
  transition: transform .25s ease
  filter: drop-shadow(1px 2px 3px rgba(50, 50, 0, .25))
  display: flex
  .border, .shape
    flex: 1
    display: flex
  .shape
    margin: 2px
    display: flex
    &::after
      content: ''
      flex: 1
      margin: 20%
  // TODO: Remove matchable hint before production build
  &[matchable]
    filter: drop-shadow(1px 2px 5px red)

jewel-piece
  &[type='square']
    $color = $color-square
    $colors = (($color + 50%) ($color + 25%) ($color - 25%) ($color - 50%))
    .border, .shape, .shape::after
      border-radius: 10%
    .border
      background: linear-gradient(130deg, $colors[0], $colors[3])
      margin: 1px
    .shape
      background: radial-gradient($colors[1], $colors[2])
    .shape::after
      background: linear-gradient(130deg, $colors[1], $color)

  &[type='diamond']
    $color = $color-diamond
    $colors = (($color + 60%) ($color + 40%) ($color - 15%) ($color - 30%))
    width: calc(100% + 4px)
    height: @width
    margin: -2px 0 0 -2px
    .border, .shape, .shape::after
      clip-path: polygon(50% 0%, 100% 50%, 50% 100%, 0% 50%)
    .border
      background: linear-gradient(130deg, $colors[0], $colors[3])
    .shape
      background: radial-gradient($colors[1], $colors[2])
    .shape::after
      background: linear-gradient(130deg, $colors[1], $color)

  &[type='circle']
    $color = $color-circle
    $colors = (($color + 75%) ($color + 35%) ($color - 10%) ($color - 40%))
    .border, .shape, .shape::after
      border-radius: 50%
    .border
      background: linear-gradient(130deg, $colors[0], $colors[3])
      margin: 1px
    .shape
      background: radial-gradient($colors[1], $colors[2])
    .shape::after
      background: linear-gradient(130deg, $colors[1], $color)
      margin: 14%

  &[type='triangle']
    $color = $color-triangle
    $colors = (($color + 90%) ($color + 40%) ($color - 20%) ($color - 40%))
    .border, .shape, .shape::after
      clip-path: polygon(50% 0%, 0% 100%, 100% 100%)
    .border
      background: linear-gradient(130deg, $colors[0], $colors[3])
    .shape
      background: radial-gradient($colors[1], $colors[2])
    .shape::after
      background: linear-gradient(130deg, $colors[1], $color)
      margin: 20% 15% 10%

  &[type='hexagon']
    $color = $color-hexagon
    $colors = (($color + 90%) ($color + 40%) ($color - 20%) ($color - 40%))
    .border, .shape, .shape::after
      clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%)
    .border
      background: linear-gradient(130deg, $colors[0], $colors[3])
    .shape
      background: radial-gradient($colors[1], $colors[2])
    .shape::after
      background: linear-gradient(130deg, $colors[1], $color)
      margin: 15%

  &[type='heptagon']
    $color = $color-heptagon
    $colors = (($color + 80%) ($color + 45%) ($color - 12%) ($color - 40%))
    .border, .shape, .shape::after
      clip-path: polygon(30% 0, 0 20%, 0 55%, 50% 100%, 100% 55%, 100% 20%, 70% 0)
    .border
      background: linear-gradient(130deg, $colors[0], $colors[3])
    .shape
      background: radial-gradient(65% 50% at 50% 40%, $color 50%, $colors[2])
    .shape::after
      background: linear-gradient(130deg, $colors[1], $color)
      margin: 15%
